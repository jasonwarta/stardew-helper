{"version":3,"sources":["components/DataContext.jsx","components/ToggleButton.jsx","screens/Home/constants.js","screens/Home/components/TableRow.jsx","screens/Home/Home.jsx","reportWebVitals.js","index.js"],"names":["data","require","DataContext","createContext","TOGGLE_COLLECTED","TOGGLE_SUBMITTED","reducer","state","action","idx","console","log","type","findIndex","id","value","slice","collected","Boolean","submitted","getData","filters","term","map","item","matchedSeason","reduce","prev","curr","seasons","includes","show","matchedTerm","Object","keys","toLowerCase","endsWith","startsWith","l","f","length","k","Error","storeData","localStorage","setItem","JSON","stringify","localData","getItem","parse","children","useReducer","args","res","dispatch","contextValue","useMemo","Provider","ToggleButton","bg","onClick","initial","rest","useState","toggle","setToggle","handleClick","event","tog","on","e","off","headers","TableRow","onCheckboxChange","key","join","isChecked","onChange","_focus","Home","useContext","setFilters","setTerm","behavior","setBehavior","actions","resetData","toggleCollected","toggleSubmitted","filter","AND","OR","useEffect","filterSeason","season","target","innerText","indexOf","direction","pos","top","zIndex","m","size","orientation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","window","reshape","newData","forEach","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5370f431.chunk.js","sourcesContent":["import React, { useReducer, createContext, useMemo } from 'react';\r\n\r\nconst data = require('constants/data');\r\n\r\nconst localStorageKey = 'stardew-helper';\r\n\r\nexport const DataContext = createContext(null);\r\n\r\nexport const TOGGLE_COLLECTED = 'TOGGLE_COLLECTED';\r\nexport const TOGGLE_SUBMITTED = 'TOGGLE_SUBMITTED';\r\nexport const SET_DATA = 'SET_DATA';\r\nexport const RESET_DATA = 'RESET_DATA';\r\nexport const FILTER_AND = 'FILTER_AND';\r\nexport const FILTER_OR = 'FILTER_OR';\r\n\r\nconst reducer = (state, action) => {\r\n\tlet idx;\r\n\tconsole.log(action);\r\n\tswitch (action.type) {\r\n\t\tcase TOGGLE_COLLECTED:\r\n\t\t\tidx = state.findIndex(({ id }) => id === action.value);\r\n\r\n\t\t\treturn [\r\n\t\t\t\t...state.slice(0, idx),\r\n\t\t\t\t{\r\n\t\t\t\t\t...state[idx],\r\n\t\t\t\t\tcollected: !Boolean(state[idx].collected),\r\n\t\t\t\t},\r\n\t\t\t\t...state.slice(idx + 1),\r\n\t\t\t];\r\n\r\n\t\tcase TOGGLE_SUBMITTED:\r\n\t\t\tidx = state.findIndex(({ id }) => id === action.value);\r\n\r\n\t\t\treturn [\r\n\t\t\t\t...state.slice(0, idx),\r\n\t\t\t\t{\r\n\t\t\t\t\t...state[idx],\r\n\t\t\t\t\tsubmitted: !Boolean(state[idx].submitted),\r\n\t\t\t\t},\r\n\t\t\t\t...state.slice(idx + 1),\r\n\t\t\t];\r\n\r\n\t\tcase SET_DATA:\r\n\t\t\treturn action.value;\r\n\r\n\t\tcase RESET_DATA:\r\n\t\t\treturn getData();\r\n\t\t// const localData = localStorage.getItem('stardew-helper');\r\n\t\t// if (localData) {\r\n\t\t// \treturn JSON.parse(localData).map((item) => ({ ...item, show: true }));\r\n\t\t// } else return data;\r\n\r\n\t\tcase FILTER_AND: {\r\n\t\t\tconst { filters, term } = action.value;\r\n\r\n\t\t\treturn state.map((item) => {\r\n\t\t\t\tconst matchedSeason = filters.reduce(\r\n\t\t\t\t\t(prev, curr) => item.seasons.includes(curr) && prev,\r\n\t\t\t\t\ttrue\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (term === '') return { ...item, show: matchedSeason };\r\n\r\n\t\t\t\tconst matchedTerm = Object.keys(item).reduce((prev, curr) => {\r\n\t\t\t\t\tif (typeof item[curr] === 'string' && item[curr].toLowerCase().includes(term))\r\n\t\t\t\t\t\treturn prev || true;\r\n\r\n\t\t\t\t\tif (typeof item[curr] === 'boolean') {\r\n\t\t\t\t\t\tif (term.endsWith(curr)) {\r\n\t\t\t\t\t\t\tif (term.startsWith('is:') && Boolean(item[curr]) === true) {\r\n\t\t\t\t\t\t\t\treturn prev || true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (term.startsWith('not:') && Boolean(item[curr]) === false) {\r\n\t\t\t\t\t\t\t\treturn prev || true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (typeof item[curr] === 'object') {\r\n\t\t\t\t\t\tfor (const l of Object.keys(item[curr])) {\r\n\t\t\t\t\t\t\tif (item[curr][l].includes(term)) return prev || true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn prev || false;\r\n\t\t\t\t}, false);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...item,\r\n\t\t\t\t\tshow: matchedSeason && matchedTerm,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tcase FILTER_OR: {\r\n\t\t\tconst { filters, term } = action.value;\r\n\r\n\t\t\treturn data.map((item) => {\r\n\t\t\t\tfor (const f of filters) {\r\n\t\t\t\t\tif (item.seasons.includes(f)) return { ...item, show: true };\r\n\t\t\t\t\telse if (filters.includes('any') && item.seasons.length === 0)\r\n\t\t\t\t\t\treturn { ...item, show: true };\r\n\t\t\t\t}\r\n\t\t\t\tif (term !== '') {\r\n\t\t\t\t\tfor (const k of Object.keys(item)) {\r\n\t\t\t\t\t\tif (typeof item[k] === 'string' && item[k].toLowerCase().includes(term))\r\n\t\t\t\t\t\t\treturn { ...item, show: true };\r\n\r\n\t\t\t\t\t\tif (typeof item[k] === 'boolean') {\r\n\t\t\t\t\t\t\tif (term.endsWith(k)) {\r\n\t\t\t\t\t\t\t\tif (term.startsWith('is:') && Boolean(item[k]) === true) {\r\n\t\t\t\t\t\t\t\t\treturn { ...item, show: true };\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (term.startsWith('not:') && Boolean(item[k]) === false) {\r\n\t\t\t\t\t\t\t\t\treturn { ...item, show: true };\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (typeof item[k] === 'object') {\r\n\t\t\t\t\t\t\tfor (const l of Object.keys(item[k])) {\r\n\t\t\t\t\t\t\t\tif (item[k][l].includes(term)) return { ...item, show: true };\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...item,\r\n\t\t\t\t\tshow: false,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new Error();\r\n\t}\r\n};\r\n\r\nconst storeData = (data) => {\r\n\tlocalStorage.setItem(localStorageKey, JSON.stringify(data));\r\n};\r\n\r\nconst getData = () => {\r\n\tconst localData = localStorage.getItem('stardew-helper');\r\n\tif (localData) {\r\n\t\treturn JSON.parse(localData).map((item) => ({ ...item, show: true }));\r\n\t} else return data;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default ({ children }) => {\r\n\tconst persistChangesToLocalStorage = (...args) => {\r\n\t\tconst res = reducer(...args);\r\n\t\tconst [, { type }] = args;\r\n\t\tif (type === TOGGLE_SUBMITTED || type === TOGGLE_COLLECTED) storeData(res);\r\n\t\treturn res;\r\n\t};\r\n\r\n\tconst [state, dispatch] = useReducer(persistChangesToLocalStorage, getData());\r\n\r\n\tconst contextValue = useMemo(() => ({ state, dispatch }), [state, dispatch]);\r\n\r\n\treturn <DataContext.Provider value={contextValue}>{children}</DataContext.Provider>;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Button } from '@chakra-ui/react';\r\n\r\n/**\r\n * returns custom field \"on\" in event object\r\n */\r\nconst ToggleButton = ({ children, bg, onClick, initial, ...rest }) => {\r\n\tconst [toggle, setToggle] = useState(initial ? initial : false);\r\n\r\n\tfunction handleClick(event, tog) {\r\n\t\tsetToggle(!toggle);\r\n\t\tonClick({\r\n\t\t\ton: !tog,\r\n\t\t\t...event,\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Button onClick={(e) => handleClick(e, toggle)} bg={toggle ? bg.on : bg.off} {...rest}>\r\n\t\t\t{children}\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default ToggleButton;\r\n","export const headers = ['seasons', 'item', 'room', 'bundle', 'details', 'collected', 'submitted'];\nexport const seasons = ['spring', 'summer', 'fall', 'winter', 'any'];\n","import React from 'react';\r\nimport { Tr, Td, Checkbox, Center } from '@chakra-ui/react';\r\n\r\nimport { headers } from '../constants';\r\n\r\nconst TableRow = ({ item, onCheckboxChange }) => (\r\n\t<Tr>\r\n\t\t{headers.map((key) => {\r\n\t\t\tif (key === 'seasons') return <Td key={`${item.id}-${key}`}>{item[key].join(',')}</Td>;\r\n\t\t\telse if (key === 'collected' || key === 'submitted')\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Td key={`${item.id}-${key}`}>\r\n\t\t\t\t\t\t<Center>\r\n\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\tisChecked={Boolean(item[key])}\r\n\t\t\t\t\t\t\t\tonChange={() => onCheckboxChange(key, item.id)}\r\n\t\t\t\t\t\t\t\t_focus={null}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Center>\r\n\t\t\t\t\t</Td>\r\n\t\t\t\t);\r\n\t\t\telse return <Td key={`${item.id}-${key}`}>{item[key]}</Td>;\r\n\t\t})}\r\n\t</Tr>\r\n);\r\n\r\nexport default TableRow;\r\n","import React, { useState, useEffect, useContext, useMemo } from 'react';\r\nimport {\r\n\tFlex,\r\n\tTable,\r\n\tThead,\r\n\tTbody,\r\n\tTr,\r\n\tTh,\r\n\tBox,\r\n\tInput,\r\n\tInputGroup,\r\n\tInputLeftAddon,\r\n\tDivider,\r\n\tButton,\r\n} from '@chakra-ui/react';\r\n\r\nimport { DataContext } from 'components/DataContext';\r\nimport ToggleButton from 'components/ToggleButton';\r\n\r\nimport { headers, seasons } from './constants';\r\nimport TableRow from './components/TableRow';\r\n\r\nconst Home = () => {\r\n\tconst { state: data, dispatch } = useContext(DataContext);\r\n\tconst [filters, setFilters] = useState([]);\r\n\tconst [term, setTerm] = useState('');\r\n\tconst [behavior, setBehavior] = useState('OR');\r\n\r\n\tconst actions = useMemo(\r\n\t\t() => ({\r\n\t\t\tresetData: () => {\r\n\t\t\t\tdispatch({ type: 'RESET_DATA' });\r\n\t\t\t},\r\n\t\t\ttoggleCollected: (value) => {\r\n\t\t\t\tdispatch({ type: 'TOGGLE_COLLECTED', value });\r\n\t\t\t},\r\n\t\t\ttoggleSubmitted: (value) => {\r\n\t\t\t\tdispatch({ type: 'TOGGLE_SUBMITTED', value });\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\tconst filter = useMemo(\r\n\t\t() => ({\r\n\t\t\tAND: () => {\r\n\t\t\t\tdispatch({ type: 'FILTER_AND', value: { filters, term } });\r\n\t\t\t},\r\n\t\t\tOR: () => {\r\n\t\t\t\tdispatch({ type: 'FILTER_OR', value: { filters, term } });\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[filters, term, dispatch]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (filters.length === 0 && term === '') {\r\n\t\t\tactions.resetData();\r\n\t\t} else {\r\n\t\t\tif (behavior === 'AND') {\r\n\t\t\t\tfilter.AND();\r\n\t\t\t} else {\r\n\t\t\t\tfilter.OR();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [filters, behavior, term, actions, filter]);\r\n\r\n\tconst filterSeason = ({ on, target: { innerText: season } }) => {\r\n\t\tif (Boolean(on)) {\r\n\t\t\tsetFilters([season, ...filters]);\r\n\t\t} else {\r\n\t\t\tconst idx = filters.indexOf(season);\r\n\t\t\tsetFilters([...filters.slice(0, idx), ...filters.slice(idx + 1)]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onCheckboxChange = (key, id) => {\r\n\t\tkey === 'collected' && actions.toggleCollected(id);\r\n\t\tkey === 'submitted' && actions.toggleSubmitted(id);\r\n\t};\r\n\r\n\tconst changeBehavior = () => {\r\n\t\tif (behavior === 'OR') setBehavior('AND');\r\n\t\telse setBehavior('OR');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Flex direction='column'>\r\n\t\t\t\t<Flex direction='row' pos='sticky' top={0} bg='white' zIndex={1000}>\r\n\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t<InputLeftAddon children='Search' />\r\n\t\t\t\t\t\t<Input type='text' onChange={(event) => setTerm(event.target.value.toLowerCase())} />\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<Flex direction='row' pos='sticky' top={10} bg='white' zIndex={1000}>\r\n\t\t\t\t\t<Button onClick={changeBehavior} m={2} size='sm' _focus={null}>\r\n\t\t\t\t\t\t{behavior}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Divider orientation='vertical' />\r\n\t\t\t\t\t<Divider orientation='vertical' />\r\n\t\t\t\t\t{seasons.map((season) => (\r\n\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\tkey={season}\r\n\t\t\t\t\t\t\tonClick={filterSeason}\r\n\t\t\t\t\t\t\tbg={{ off: '#EDF2F7', on: 'lightblue' }}\r\n\t\t\t\t\t\t\tm={2}\r\n\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\t_focus={null}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{season}\r\n\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<Thead pos='sticky' zIndex={1000}>\r\n\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t{headers.map((key) => (\r\n\t\t\t\t\t\t\t\t<Th pos='sticky' top={88} bg='lightblue' key={key}>\r\n\t\t\t\t\t\t\t\t\t{key}\r\n\t\t\t\t\t\t\t\t</Th>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t</Thead>\r\n\t\t\t\t\t<Tbody>\r\n\t\t\t\t\t\t{data.map((item) =>\r\n\t\t\t\t\t\t\titem.show ? (\r\n\t\t\t\t\t\t\t\t<TableRow key={item.id} item={item} onCheckboxChange={onCheckboxChange} />\r\n\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t</Flex>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ChakraProvider } from '@chakra-ui/react';\n\nimport Home from 'screens/Home';\nimport DataContext from 'components/DataContext';\nimport reportWebVitals from './reportWebVitals';\n\nconst data = require('constants/data.json');\nwindow.reshape = () => {\n\tconst newData = {};\n\tdata.forEach(({ id, ...rest }) => {\n\t\tnewData[id] = rest;\n\t});\n\n\tconsole.log(JSON.stringify(newData));\n};\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ChakraProvider>\n\t\t\t<DataContext>\n\t\t\t\t<Home />\n\t\t\t</DataContext>\n\t\t</ChakraProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}