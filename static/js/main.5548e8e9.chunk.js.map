{"version":3,"sources":["components/ToggleButton.jsx","screens/Home/Home.jsx","reportWebVitals.js","index.js"],"names":["ToggleButton","children","bg","onClick","initial","rest","useState","toggle","setToggle","handleClick","event","tog","on","e","off","originalData","require","Home","data","setData","filters","setFilters","term","setTerm","behavior","setBehavior","headers","useEffect","length","filteredData","filter","item","matchedSeason","reduce","prev","curr","seasons","includes","matchedTerm","Object","keys","toLowerCase","l","f","k","filterSeason","season","target","innerText","console","log","warn","idx","indexOf","newFilters","splice","direction","type","onChange","value","m","size","_focus","orientation","map","pos","key","top","i","join","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5548e8e9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from '@chakra-ui/react';\r\n\r\n/**\r\n * returns custom field \"on\" in event object\r\n */\r\nconst ToggleButton = ({ children, bg, onClick, initial, ...rest }) => {\r\n\tconst [toggle, setToggle] = useState(initial ? initial : false);\r\n\r\n\tfunction handleClick(event, tog) {\r\n\t\tsetToggle(!toggle);\r\n\t\tonClick({\r\n\t\t\ton: !tog,\r\n\t\t\t...event,\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Button onClick={(e) => handleClick(e, toggle)} bg={toggle ? bg.on : bg.off} {...rest}>\r\n\t\t\t{children}\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default ToggleButton;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n\tFlex,\r\n\tTable,\r\n\tThead,\r\n\tTbody,\r\n\tTr,\r\n\tTh,\r\n\tTd,\r\n\tBox,\r\n\tInput,\r\n\tInputGroup,\r\n\tInputLeftAddon,\r\n\tDivider,\r\n\tButton,\r\n} from '@chakra-ui/react';\r\n\r\nimport ToggleButton from 'components/ToggleButton';\r\nconst originalData = require('constants/data');\r\n\r\nconst Home = () => {\r\n\tconst [data, setData] = useState(originalData);\r\n\tconst [filters, setFilters] = useState([]);\r\n\tconst [term, setTerm] = useState('');\r\n\tconst [behavior, setBehavior] = useState('OR');\r\n\tconst headers = ['seasons', 'item', 'room', 'bundle', 'details'];\r\n\tconst seasons = ['spring', 'summer', 'fall', 'winter', 'any'];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (filters.length === 0 && term === '') {\r\n\t\t\tsetData(originalData);\r\n\t\t} else {\r\n\t\t\tif (behavior === 'AND') {\r\n\t\t\t\tconst filteredData = originalData.filter((item) => {\r\n\t\t\t\t\tconst matchedSeason = filters.reduce(\r\n\t\t\t\t\t\t(prev, curr) => item.seasons.includes(curr) && prev,\r\n\t\t\t\t\t\ttrue\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif (term === '') return matchedSeason;\r\n\r\n\t\t\t\t\tconst matchedTerm = Object.keys(item).reduce((prev, curr) => {\r\n\t\t\t\t\t\tif (typeof item[curr] === 'string' && item[curr].toLowerCase().includes(term))\r\n\t\t\t\t\t\t\treturn prev || true;\r\n\t\t\t\t\t\tif (typeof item[curr] === 'object') {\r\n\t\t\t\t\t\t\tfor (const l of Object.keys(item[curr])) {\r\n\t\t\t\t\t\t\t\tif (item[curr][l].includes(term)) return prev || true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn prev || false;\r\n\t\t\t\t\t}, false);\r\n\r\n\t\t\t\t\treturn matchedSeason && matchedTerm;\r\n\t\t\t\t});\r\n\t\t\t\tsetData(filteredData);\r\n\t\t\t} else {\r\n\t\t\t\tconst filteredData = originalData.filter((item) => {\r\n\t\t\t\t\tfor (const f of filters) {\r\n\t\t\t\t\t\tif (item.seasons.includes(f)) return true;\r\n\t\t\t\t\t\telse if (filters.includes('any') && item.seasons.length === 0) return true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (term !== '') {\r\n\t\t\t\t\t\tfor (const k of Object.keys(item)) {\r\n\t\t\t\t\t\t\tif (typeof item[k] === 'string' && item[k].toLowerCase().includes(term)) return true;\r\n\t\t\t\t\t\t\tif (typeof item[k] === 'object') {\r\n\t\t\t\t\t\t\t\tfor (const l of Object.keys(item[k])) {\r\n\t\t\t\t\t\t\t\t\tif (item[k][l].includes(term)) return true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t});\r\n\t\t\t\tsetData(filteredData);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [filters, term, behavior]);\r\n\r\n\tconst filterSeason = (event) => {\r\n\t\tconst season = event.target.innerText;\r\n\t\tconst on = event.on;\r\n\t\tconsole.log({ season, on });\r\n\r\n\t\tif (on) {\r\n\t\t\tif (filters.includes(season)) {\r\n\t\t\t\t// this shouldn't happen, so not handling it\r\n\t\t\t\tconsole.warn('unreachable state was reached');\r\n\t\t\t} else {\r\n\t\t\t\tsetFilters([season, ...filters]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst idx = filters.indexOf(season);\r\n\t\t\tif (idx > -1) {\r\n\t\t\t\tconst newFilters = [...filters];\r\n\t\t\t\tnewFilters.splice(idx, 1);\r\n\t\t\t\t// const newFilters = filters.splice(idx, 1);\r\n\t\t\t\tconsole.log('buildFilter', newFilters);\r\n\t\t\t\tsetFilters(newFilters);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst changeBehavior = () => {\r\n\t\tif (behavior === 'OR') setBehavior('AND');\r\n\t\telse setBehavior('OR');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Flex direction='column'>\r\n\t\t\t\t<Flex direction='row'>\r\n\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t<InputLeftAddon children='Search' />\r\n\t\t\t\t\t\t<Input type='text' onChange={(event) => setTerm(event.target.value.toLowerCase())} />\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<Flex direction='row'>\r\n\t\t\t\t\t<Button onClick={changeBehavior} m={2} size='sm' _focus={null}>\r\n\t\t\t\t\t\t{behavior}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Divider orientation='vertical' />\r\n\t\t\t\t\t<Divider orientation='vertical' />\r\n\t\t\t\t\t{seasons.map((season) => (\r\n\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\tkey={season}\r\n\t\t\t\t\t\t\tonClick={filterSeason}\r\n\t\t\t\t\t\t\tbg={{ off: '#EDF2F7', on: 'lightblue' }}\r\n\t\t\t\t\t\t\tm={2}\r\n\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\t_focus={null}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{season}\r\n\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<Thead pos='sticky' bg='lightblue'>\r\n\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t{headers.map((key) => (\r\n\t\t\t\t\t\t\t\t<Th pos='sticky' top={0} bg='lightblue' key={key}>\r\n\t\t\t\t\t\t\t\t\t{key}\r\n\t\t\t\t\t\t\t\t</Th>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t</Thead>\r\n\t\t\t\t\t<Tbody>\r\n\t\t\t\t\t\t{data.map((item, i) => (\r\n\t\t\t\t\t\t\t<Tr key={i}>\r\n\t\t\t\t\t\t\t\t{headers.map((key) => (\r\n\t\t\t\t\t\t\t\t\t<Td key={`${i}-${key}`}>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t// handle the season key slightly differently\r\n\t\t\t\t\t\t\t\t\t\t\tkey === 'seasons'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? item[key].length === 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? ''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: item[key].join(',')\r\n\t\t\t\t\t\t\t\t\t\t\t\t: item[key]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Td>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t</Flex>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ChakraProvider } from '@chakra-ui/react';\n\nimport Home from 'screens/Home';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ChakraProvider>\n\t\t\t<Home />\n\t\t</ChakraProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}